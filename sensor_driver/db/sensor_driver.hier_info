|top_level
CLOCK_50 => CLOCK_50.IN2
GPIO[0] <> <UNC>
GPIO[1] <> <UNC>
GPIO[2] <> <UNC>
GPIO[3] <> <UNC>
GPIO[4] <> <UNC>
GPIO[5] <> <UNC>
GPIO[6] <> <UNC>
GPIO[7] <> <UNC>
GPIO[8] <> <UNC>
GPIO[9] <> <UNC>
GPIO[10] <> <UNC>
GPIO[11] <> <UNC>
GPIO[12] <> <UNC>
GPIO[13] <> <UNC>
GPIO[14] <> <UNC>
GPIO[15] <> <UNC>
GPIO[16] <> <UNC>
GPIO[17] <> <UNC>
GPIO[18] <> <UNC>
GPIO[19] <> <UNC>
GPIO[20] <> <UNC>
GPIO[21] <> <UNC>
GPIO[22] <> <UNC>
GPIO[23] <> <UNC>
GPIO[24] <> <UNC>
GPIO[25] <> <UNC>
GPIO[26] <> <UNC>
GPIO[27] <> GPIO[27]
GPIO[28] <> <UNC>
GPIO[30] <> <UNC>
GPIO[31] <> <UNC>
GPIO[32] <> <UNC>
GPIO[33] <> <UNC>
GPIO[34] <> <UNC>
GPIO[35] <> <UNC>
KEY[0] => _.IN1
KEY[0] => _.IN1
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
HEX0[0] <= display:u_display.display0
HEX0[1] <= display:u_display.display0
HEX0[2] <= display:u_display.display0
HEX0[3] <= display:u_display.display0
HEX0[4] <= display:u_display.display0
HEX0[5] <= display:u_display.display0
HEX0[6] <= display:u_display.display0
HEX1[0] <= display:u_display.display1
HEX1[1] <= display:u_display.display1
HEX1[2] <= display:u_display.display1
HEX1[3] <= display:u_display.display1
HEX1[4] <= display:u_display.display1
HEX1[5] <= display:u_display.display1
HEX1[6] <= display:u_display.display1
HEX2[0] <= display:u_display.display2
HEX2[1] <= display:u_display.display2
HEX2[2] <= display:u_display.display2
HEX2[3] <= display:u_display.display2
HEX2[4] <= display:u_display.display2
HEX2[5] <= display:u_display.display2
HEX2[6] <= display:u_display.display2
HEX3[0] <= display:u_display.display3
HEX3[1] <= display:u_display.display3
HEX3[2] <= display:u_display.display3
HEX3[3] <= display:u_display.display3
HEX3[4] <= display:u_display.display3
HEX3[5] <= display:u_display.display3
HEX3[6] <= display:u_display.display3
LEDR[0] <= distance_leds.DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] <= distance_leds.DB_MAX_OUTPUT_PORT_TYPE
LEDR[2] <= distance_leds.DB_MAX_OUTPUT_PORT_TYPE
LEDR[3] <= distance_leds.DB_MAX_OUTPUT_PORT_TYPE
LEDR[4] <= distance_leds.DB_MAX_OUTPUT_PORT_TYPE
LEDR[5] <= distance_leds.DB_MAX_OUTPUT_PORT_TYPE
LEDR[6] <= distance_leds.DB_MAX_OUTPUT_PORT_TYPE
LEDR[7] <= distance_leds.DB_MAX_OUTPUT_PORT_TYPE
LEDR[8] <= distance_leds.DB_MAX_OUTPUT_PORT_TYPE
LEDR[9] <= LessThan1.DB_MAX_OUTPUT_PORT_TYPE


|top_level|sonar_pll:sonar_pll
areset => areset.IN1
inclk0 => sub_wire1[0].IN1
c0 <= altpll:altpll_component.clk
locked <= altpll:altpll_component.locked


|top_level|sonar_pll:sonar_pll|altpll:altpll_component
inclk[0] => sonar_pll_altpll:auto_generated.inclk[0]
inclk[1] => sonar_pll_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => sonar_pll_altpll:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= sonar_pll_altpll:auto_generated.locked
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|top_level|sonar_pll:sonar_pll|altpll:altpll_component|sonar_pll_altpll:auto_generated
areset => pll_lock_sync.ACLR
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1
locked <= locked.DB_MAX_OUTPUT_PORT_TYPE


|top_level|sonar_range:sonar_range
clk => wait_count[0].CLK
clk => wait_count[1].CLK
clk => wait_count[2].CLK
clk => wait_count[3].CLK
clk => wait_count[4].CLK
clk => wait_count[5].CLK
clk => wait_count[6].CLK
clk => wait_count[7].CLK
clk => wait_count[8].CLK
clk => wait_count[9].CLK
clk => wait_count[10].CLK
clk => wait_count[11].CLK
clk => wait_count[12].CLK
clk => wait_count[13].CLK
clk => wait_count[14].CLK
clk => wait_count[15].CLK
clk => wait_count[16].CLK
clk => wait_count[17].CLK
clk => wait_count[18].CLK
clk => wait_count[19].CLK
clk => wait_count[20].CLK
clk => wait_count[21].CLK
clk => wait_count[22].CLK
clk => wait_count[23].CLK
clk => wait_count[24].CLK
clk => wait_count[25].CLK
clk => wait_count[26].CLK
clk => wait_count[27].CLK
clk => wait_count[28].CLK
clk => wait_count[29].CLK
clk => wait_count[30].CLK
clk => wait_count[31].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => trig_count[0].CLK
clk => trig_count[1].CLK
clk => trig_count[2].CLK
clk => trig_count[3].CLK
clk => trig_count[4].CLK
clk => trig_count[5].CLK
clk => trig_count[6].CLK
clk => trig_count[7].CLK
clk => trig_count[8].CLK
clk => trig_count[9].CLK
clk => trig_count[10].CLK
clk => trig_count[11].CLK
clk => trig_count[12].CLK
clk => trig_count[13].CLK
clk => trig_count[14].CLK
clk => trig_count[15].CLK
clk => trig_count[16].CLK
clk => trig_count[17].CLK
clk => trig_count[18].CLK
clk => trig_count[19].CLK
clk => trig_count[20].CLK
clk => trig_count[21].CLK
clk => trig_count[22].CLK
clk => trig_count[23].CLK
clk => trig_count[24].CLK
clk => trig_count[25].CLK
clk => trig_count[26].CLK
clk => trig_count[27].CLK
clk => trig_count[28].CLK
clk => trig_count[29].CLK
clk => trig_count[30].CLK
clk => trig_count[31].CLK
clk => ready~reg0.CLK
clk => trig~reg0.CLK
clk => sm_sync.CLK
clk => sm_meta.CLK
clk => echo_sync.CLK
clk => echo_meta.CLK
clk => state~1.DATAIN
start_measure => sm_meta.DATAIN
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => trig.OUTPUTSELECT
rst => ready.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => trig_count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => wait_count.OUTPUTSELECT
rst => next_state.IDLE.OUTPUTSELECT
rst => next_state.TRIG.OUTPUTSELECT
rst => next_state.MEASURE.OUTPUTSELECT
rst => next_state.WAIT.OUTPUTSELECT
rst => next_state.DATA_VALID.OUTPUTSELECT
rst => valid.OUTPUTSELECT
echo => echo_meta.DATAIN
trig <= trig~reg0.DB_MAX_OUTPUT_PORT_TYPE
distance[0] <= count[8].DB_MAX_OUTPUT_PORT_TYPE
distance[1] <= count[9].DB_MAX_OUTPUT_PORT_TYPE
distance[2] <= count[10].DB_MAX_OUTPUT_PORT_TYPE
distance[3] <= count[11].DB_MAX_OUTPUT_PORT_TYPE
distance[4] <= count[12].DB_MAX_OUTPUT_PORT_TYPE
distance[5] <= count[13].DB_MAX_OUTPUT_PORT_TYPE
distance[6] <= count[14].DB_MAX_OUTPUT_PORT_TYPE
distance[7] <= count[15].DB_MAX_OUTPUT_PORT_TYPE
distance[8] <= count[16].DB_MAX_OUTPUT_PORT_TYPE
distance[9] <= count[17].DB_MAX_OUTPUT_PORT_TYPE
distance[10] <= count[18].DB_MAX_OUTPUT_PORT_TYPE
distance[11] <= count[19].DB_MAX_OUTPUT_PORT_TYPE
ready <= ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
valid <= valid.DB_MAX_OUTPUT_PORT_TYPE


|top_level|display:u_display
clk => digit3[0].CLK
clk => digit3[1].CLK
clk => digit3[2].CLK
clk => digit3[3].CLK
clk => digit2[0].CLK
clk => digit2[1].CLK
clk => digit2[2].CLK
clk => digit2[3].CLK
clk => digit1[0].CLK
clk => digit1[1].CLK
clk => digit1[2].CLK
clk => digit1[3].CLK
clk => digit0[0].CLK
clk => digit0[1].CLK
clk => digit0[2].CLK
clk => digit0[3].CLK
clk => temp_value[0].CLK
clk => temp_value[1].CLK
clk => temp_value[2].CLK
clk => temp_value[3].CLK
clk => temp_value[4].CLK
clk => temp_value[5].CLK
clk => temp_value[6].CLK
clk => temp_value[7].CLK
clk => temp_value[8].CLK
clk => temp_value[9].CLK
clk => temp_value[10].CLK
clk => temp_value[11].CLK
clk => bcd[3][0].CLK
clk => bcd[3][1].CLK
clk => bcd[3][2].CLK
clk => bcd[3][3].CLK
clk => bcd[2][0].CLK
clk => bcd[2][1].CLK
clk => bcd[2][2].CLK
clk => bcd[2][3].CLK
clk => bcd[1][0].CLK
clk => bcd[1][1].CLK
clk => bcd[1][2].CLK
clk => bcd[1][3].CLK
clk => bcd[0][0].CLK
clk => bcd[0][1].CLK
clk => bcd[0][2].CLK
clk => bcd[0][3].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => current_state[0].CLK
clk => current_state[1].CLK
clk => current_state[2].CLK
clk => current_state[3].CLK
clk => current_state[4].CLK
clk => current_state[5].CLK
clk => current_state[6].CLK
clk => current_state[7].CLK
clk => current_state[8].CLK
clk => current_state[9].CLK
clk => current_state[10].CLK
clk => current_state[11].CLK
clk => current_state[12].CLK
clk => current_state[13].CLK
clk => current_state[14].CLK
clk => current_state[15].CLK
clk => current_state[16].CLK
clk => current_state[17].CLK
clk => current_state[18].CLK
clk => current_state[19].CLK
clk => current_state[20].CLK
clk => current_state[21].CLK
clk => current_state[22].CLK
clk => current_state[23].CLK
clk => current_state[24].CLK
clk => current_state[25].CLK
clk => current_state[26].CLK
clk => current_state[27].CLK
clk => current_state[28].CLK
clk => current_state[29].CLK
clk => current_state[30].CLK
clk => current_state[31].CLK
value[0] => temp_value.DATAB
value[1] => temp_value.DATAB
value[2] => temp_value.DATAB
value[3] => temp_value.DATAB
value[4] => temp_value.DATAB
value[5] => temp_value.DATAB
value[6] => temp_value.DATAB
value[7] => temp_value.DATAB
value[8] => temp_value.DATAB
value[9] => temp_value.DATAB
value[10] => temp_value.DATAB
value[11] => temp_value.DATAB
display0[0] <= seven_seg:u_digit0.segments
display0[1] <= seven_seg:u_digit0.segments
display0[2] <= seven_seg:u_digit0.segments
display0[3] <= seven_seg:u_digit0.segments
display0[4] <= seven_seg:u_digit0.segments
display0[5] <= seven_seg:u_digit0.segments
display0[6] <= seven_seg:u_digit0.segments
display1[0] <= seven_seg:u_digit1.segments
display1[1] <= seven_seg:u_digit1.segments
display1[2] <= seven_seg:u_digit1.segments
display1[3] <= seven_seg:u_digit1.segments
display1[4] <= seven_seg:u_digit1.segments
display1[5] <= seven_seg:u_digit1.segments
display1[6] <= seven_seg:u_digit1.segments
display2[0] <= seven_seg:u_digit2.segments
display2[1] <= seven_seg:u_digit2.segments
display2[2] <= seven_seg:u_digit2.segments
display2[3] <= seven_seg:u_digit2.segments
display2[4] <= seven_seg:u_digit2.segments
display2[5] <= seven_seg:u_digit2.segments
display2[6] <= seven_seg:u_digit2.segments
display3[0] <= seven_seg:u_digit3.segments
display3[1] <= seven_seg:u_digit3.segments
display3[2] <= seven_seg:u_digit3.segments
display3[3] <= seven_seg:u_digit3.segments
display3[4] <= seven_seg:u_digit3.segments
display3[5] <= seven_seg:u_digit3.segments
display3[6] <= seven_seg:u_digit3.segments


|top_level|display:u_display|seven_seg:u_digit0
bcd[0] => Decoder0.IN3
bcd[1] => Decoder0.IN2
bcd[2] => Decoder0.IN1
bcd[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|top_level|display:u_display|seven_seg:u_digit1
bcd[0] => Decoder0.IN3
bcd[1] => Decoder0.IN2
bcd[2] => Decoder0.IN1
bcd[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|top_level|display:u_display|seven_seg:u_digit2
bcd[0] => Decoder0.IN3
bcd[1] => Decoder0.IN2
bcd[2] => Decoder0.IN1
bcd[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|top_level|display:u_display|seven_seg:u_digit3
bcd[0] => Decoder0.IN3
bcd[1] => Decoder0.IN2
bcd[2] => Decoder0.IN1
bcd[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


